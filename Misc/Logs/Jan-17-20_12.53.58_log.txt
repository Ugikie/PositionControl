cprintf('strings','Saving log to: %s\n',logFile);
Saving log to: /home/ugikie/Desktop/PositionControl/Misc/Logs/Jan-17-20_12.53.58_log.txt
fprintf('\n');

measApp.writeConsoleLine('Saving log to: %s\n',logFile);
measApp.writeConsoleLine('\n');
fprintf(MI4190, '*idn?');
{Unrecognized function or variable 'MI4190'.
} 
MI4190 = serial('/dev/ttyUSB0');                 % Linux
    %if it does not work on linux, you may have to run the command:
    % 'sudo chmod 666 /dev/ttyUSB0' to enable permissions.
%MI4190 = serial('/dev/tty.usbserial-PX2DN8ZM'); % Mac
%MI4190 = serial('COM3');                        % PC

% Prologix Controller 4.2 requires CR as command terminator, LF is
% optional. The controller terminates internal query responses with CR and
% LF. Responses from the instrument are passed through as is. (See Prologix
% Controller Manual)
MI4190.Terminator = 'CR/LF';

% Reduce timeout to 0.5 second (default is 10 seconds)
MI4190.Timeout = 0.5;

% Open virtual serial port
fclose(MI4190);
fopen(MI4190);
pause(1)

warning('off','MATLAB:serial:fread:unsuccessfulRead');

% Configure as Controller (++mode 1), instrument address 4, and with
% read-after-write (++auto 1) enabled
fprintf(MI4190, '++mode 1');
fprintf(MI4190, '++addr 4');
fprintf(MI4190, '++auto 1');

% Read the id of the Controller to verify connection:
fprintf(MI4190, '*idn?');
idn = char(fread(MI4190, 100))';
measApp.writeConsoleLine('Position Controller ID: %s',idn);
measApp.writeConsoleLine('Position Controller ID: %s\n',idn);
measApp.writeConsoleLine('Position Controller ID: %s',idn);
measApp.writeConsoleLine('Position Controller ID: %s',idn);
measApp.writeConsoleLine('Position Controller ID: %s\n',idn);
measApp.writeConsoleLine('Position Controller ID: %s\n',idn);
measApp.writeConsoleLine('Position Controller ID: %s\n',idn);
measApp.writeConsoleLine('Saving log to: %s\n',logFile);
measApp.writeConsoleLine('Position Controller ID: %s\n',idn);
strcmp('Position Controller ID: %s\n','\n')

ans =

  <a href="matlab:helpPopup logical" style="font-weight:bold">logical</a>

   0

measApp.writeConsoleLine('Position Controller ID: %s\n',idn);
help strcmp
 <strong>strcmp</strong> Compare strings or character vectors
    TF = <strong>strcmp</strong>(S1,S2) compares S1 and S2 and returns logical 1 (true)
    if they are identical, and returns logical 0 (false) otherwise. Either 
    text input can be a character vector or a string scalar. 
 
    TF = <strong>strcmp</strong>(S,A) compares S to each element of array A, where S
    is a character vector, a string scalar, or a cell array with one element,
    and A is a string array or a cell array of character vectors. <strong>strcmp</strong> 
    returns TF, a logical array that is the same size as A and contains 
    logical 1 (true) for those elements of A that are a match, and logical 0 
    (false) for those elements that are not. TF = <strong>strcmp</strong>(A,S) returns the 
    same result.
 
    TF = <strong>strcmp</strong>(A1,A2) compares each element of A1 to the same element in A2, 
    where A1 and A2 are equal-size string arrays or cell arrays of character 
    vectors. Input A1 and/or A2 can also be a character array having the number 
    of rows as there are elements in the other argument. <strong>strcmp</strong> returns TF, 
    a logical array that is the same size as A1 or A2, and contains logical 1 
    (true) for those elements of A1 and A2 that are a match, and logical 0 
    (false) for those elements that are not.
 
    When one of the inputs is an array, scalar expansion occurs as needed.
 
    <strong>strcmp</strong> supports international character sets.
 
    See also <a href="matlab:help strncmp">strncmp</a>, <a href="matlab:help strcmpi">strcmpi</a>, <a href="matlab:help strfind">strfind</a>, <a href="matlab:help deblank">deblank</a>, <a href="matlab:help regexp">regexp</a>, <a href="matlab:help string/eq">string/eq</a>.

    <a href="matlab:doc strcmp">Documentation for strcmp</a>
    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('strcmp')">Other functions named strcmp</a>

replace('Position Controller ID: %s\n','\n',' ')

ans =

    'Position Controller ID: %s '

measurementApp.writeConsoleLine('[%s] Verifying if Axis is in Position',datestr(now,'HH:MM:SS.FFF'));
{Unable to resolve the name measurementApp.writeConsoleLine.
} 
measApp.writeConsoleLine('[%s] Verifying if Axis is in Position',datestr(now,'HH:MM:SS.FFF'));
testing
Beginning Measurements 17-Jan-2020 13:15:33
